{"ast":null,"code":"var _jsxFileName = \"/Users/ntimrova/Documents/numerical methods/numercal-methods-lab-2/src/components/Graph.jsx\";\n// Graph.js\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst Graph = _ref => {\n  let {\n    func,\n    a,\n    b,\n    numPoints = 100\n  } = _ref;\n  // Значення x і y для графіка функції\n  const xValues = Array.from({\n    length: 1000\n  }, (_, i) => a + i * (b - a) / 999);\n  const yValues = xValues.map(func);\n\n  // Визначення максимальної висоти для осі y\n  const yMax = Math.max(...yValues) * 1.1;\n\n  // Випадкові точки для методу Монте-Карло\n  const monteCarloPoints = Array.from({\n    length: numPoints\n  }, () => {\n    const x = a + Math.random() * (b - a);\n    const y = Math.random() * yMax;\n    const isBelow = y <= func(x); // Чи знаходиться точка під кривою\n    return {\n      x,\n      y,\n      isBelow\n    };\n  });\n  const belowPoints = monteCarloPoints.filter(point => point.isBelow);\n  const abovePoints = monteCarloPoints.filter(point => !point.isBelow);\n  const data = {\n    labels: xValues,\n    datasets: [{\n      label: 'f(x) = x^2 * cos(x)',\n      data: yValues,\n      fill: false,\n      borderColor: 'blue',\n      pointRadius: 0,\n      borderWidth: 2\n    }, {\n      label: 'Points below curve',\n      data: belowPoints.map(p => ({\n        x: p.x,\n        y: p.y\n      })),\n      backgroundColor: 'rgba(0, 255, 0, 0.5)',\n      // Зелені точки під кривою\n      pointRadius: 3,\n      type: 'scatter'\n    }, {\n      label: 'Points above curve',\n      data: abovePoints.map(p => ({\n        x: p.x,\n        y: p.y\n      })),\n      backgroundColor: 'rgba(255, 0, 0, 0.5)',\n      // Червоні точки над кривою\n      pointRadius: 3,\n      type: 'scatter'\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'x'\n        },\n        type: 'linear',\n        position: 'bottom',\n        min: a,\n        max: b\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'f(x)'\n        },\n        min: 0,\n        max: yMax\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '600px',\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","Line","Chart","registerables","jsxDEV","_jsxDEV","register","Graph","_ref","func","a","b","numPoints","xValues","Array","from","length","_","i","yValues","map","yMax","Math","max","monteCarloPoints","x","random","y","isBelow","belowPoints","filter","point","abovePoints","data","labels","datasets","label","fill","borderColor","pointRadius","borderWidth","p","backgroundColor","type","options","responsive","maintainAspectRatio","scales","title","display","text","position","min","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ntimrova/Documents/numerical methods/numercal-methods-lab-2/src/components/Graph.jsx"],"sourcesContent":["// Graph.js\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst Graph = ({ func, a, b, numPoints = 100 }) => {\n  // Значення x і y для графіка функції\n  const xValues = Array.from({ length: 1000 }, (_, i) => a + (i * (b - a)) / 999);\n  const yValues = xValues.map(func);\n\n  // Визначення максимальної висоти для осі y\n  const yMax = Math.max(...yValues) * 1.1;\n\n  // Випадкові точки для методу Монте-Карло\n  const monteCarloPoints = Array.from({ length: numPoints }, () => {\n    const x = a + Math.random() * (b - a);\n    const y = Math.random() * yMax;\n    const isBelow = y <= func(x); // Чи знаходиться точка під кривою\n    return { x, y, isBelow };\n  });\n\n  const belowPoints = monteCarloPoints.filter((point) => point.isBelow);\n  const abovePoints = monteCarloPoints.filter((point) => !point.isBelow);\n\n  const data = {\n    labels: xValues,\n    datasets: [\n      {\n        label: 'f(x) = x^2 * cos(x)',\n        data: yValues,\n        fill: false,\n        borderColor: 'blue',\n        pointRadius: 0,\n        borderWidth: 2,\n      },\n      {\n        label: 'Points below curve',\n        data: belowPoints.map((p) => ({ x: p.x, y: p.y })),\n        backgroundColor: 'rgba(0, 255, 0, 0.5)', // Зелені точки під кривою\n        pointRadius: 3,\n        type: 'scatter',\n      },\n      {\n        label: 'Points above curve',\n        data: abovePoints.map((p) => ({ x: p.x, y: p.y })),\n        backgroundColor: 'rgba(255, 0, 0, 0.5)', // Червоні точки над кривою\n        pointRadius: 3,\n        type: 'scatter',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        title: { display: true, text: 'x' },\n        type: 'linear',\n        position: 'bottom',\n        min: a,\n        max: b,\n      },\n      y: {\n        title: { display: true, text: 'f(x)' },\n        min: 0,\n        max: yMax,\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '600px', height: '400px' }}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}