{"ast":null,"code":"export const func = x => Math.pow(x, 2) * Math.cos(x);\nexport const intervals = [10, 20, 50, 100, 1000, 100000000];\nexport const analyticValue = 0.372101;\nexport function integrateRectangleMethod(func, a, b, n) {\n  const h = (b - a) / n;\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    const x = a + i * h;\n    sum += func(x);\n  }\n  return sum * h;\n}\nexport function integrateTrapezoidalMethod(func, a, b, n) {\n  const h = (b - a) / n;\n  let sum = 0.5 * (func(a) + func(b));\n  for (let i = 1; i < n; i++) {\n    const x = a + i * h;\n    sum += func(x);\n  }\n  return sum * h;\n}\nexport function integrateMonteCarloMethod(func, a, b, n) {\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    const x = a + Math.random() * (b - a);\n    sum += func(x);\n  }\n  return (b - a) / n * sum;\n}","map":{"version":3,"names":["func","x","Math","pow","cos","intervals","analyticValue","integrateRectangleMethod","a","b","n","h","sum","i","integrateTrapezoidalMethod","integrateMonteCarloMethod","random"],"sources":["/Users/ntimrova/Documents/numerical methods/numercal-methods-lab-2/src/utils/methods.js"],"sourcesContent":["export const func = (x) => Math.pow(x, 2) * Math.cos(x);\nexport const intervals = [ 10, 20, 50, 100, 1000, 100000000];\n\n\nexport const analyticValue = 0.372101;\n\nexport function integrateRectangleMethod(func, a, b, n) {\n  const h = (b - a) / n;\n  let sum = 0;\n\n  for (let i = 0; i < n; i++) {\n    const x = a + i * h;\n    sum += func(x);\n  }\n\n  return sum * h;\n}\n\nexport function integrateTrapezoidalMethod(func, a, b, n) {\n  const h = (b - a) / n;\n  let sum = 0.5 * (func(a) + func(b));  \n\n  for (let i = 1; i < n; i++) {\n    const x = a + i * h;\n    sum += func(x);\n  }\n\n  return sum * h;\n}\n\nexport function integrateMonteCarloMethod(func, a, b, n) {\n  let sum = 0;\n\n  for (let i = 0; i < n; i++) {\n    const x = a + Math.random() * (b - a);  \n    sum += func(x);\n  }\n\n  return ((b - a) / n) * sum;\n}\n"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAIC,CAAC,IAAKC,IAAI,CAACC,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,GAAGC,IAAI,CAACE,GAAG,CAACH,CAAC,CAAC;AACvD,OAAO,MAAMI,SAAS,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC;AAG5D,OAAO,MAAMC,aAAa,GAAG,QAAQ;AAErC,OAAO,SAASC,wBAAwBA,CAACP,IAAI,EAAEQ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACtD,MAAMC,CAAC,GAAG,CAACF,CAAC,GAAGD,CAAC,IAAIE,CAAC;EACrB,IAAIE,GAAG,GAAG,CAAC;EAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAEG,CAAC,EAAE,EAAE;IAC1B,MAAMZ,CAAC,GAAGO,CAAC,GAAGK,CAAC,GAAGF,CAAC;IACnBC,GAAG,IAAIZ,IAAI,CAACC,CAAC,CAAC;EAChB;EAEA,OAAOW,GAAG,GAAGD,CAAC;AAChB;AAEA,OAAO,SAASG,0BAA0BA,CAACd,IAAI,EAAEQ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACxD,MAAMC,CAAC,GAAG,CAACF,CAAC,GAAGD,CAAC,IAAIE,CAAC;EACrB,IAAIE,GAAG,GAAG,GAAG,IAAIZ,IAAI,CAACQ,CAAC,CAAC,GAAGR,IAAI,CAACS,CAAC,CAAC,CAAC;EAEnC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAEG,CAAC,EAAE,EAAE;IAC1B,MAAMZ,CAAC,GAAGO,CAAC,GAAGK,CAAC,GAAGF,CAAC;IACnBC,GAAG,IAAIZ,IAAI,CAACC,CAAC,CAAC;EAChB;EAEA,OAAOW,GAAG,GAAGD,CAAC;AAChB;AAEA,OAAO,SAASI,yBAAyBA,CAACf,IAAI,EAAEQ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACvD,IAAIE,GAAG,GAAG,CAAC;EAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAEG,CAAC,EAAE,EAAE;IAC1B,MAAMZ,CAAC,GAAGO,CAAC,GAAGN,IAAI,CAACc,MAAM,CAAC,CAAC,IAAIP,CAAC,GAAGD,CAAC,CAAC;IACrCI,GAAG,IAAIZ,IAAI,CAACC,CAAC,CAAC;EAChB;EAEA,OAAQ,CAACQ,CAAC,GAAGD,CAAC,IAAIE,CAAC,GAAIE,GAAG;AAC5B"},"metadata":{},"sourceType":"module"}